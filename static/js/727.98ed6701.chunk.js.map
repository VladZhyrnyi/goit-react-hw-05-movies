{"version":3,"file":"static/js/727.98ed6701.chunk.js","mappings":"8NAEaA,EAAcC,EAAAA,QAAAA,IAAH,iNAaXC,EAAeD,EAAAA,QAAAA,IAAH,uGAOZE,EAAcF,EAAAA,QAAAA,IAAH,kJASXG,EAAQH,EAAAA,QAAAA,GAAH,uCAGLI,EAAiBJ,EAAAA,QAAAA,IAAH,+F,SC1BdK,EAAY,SAAC,GAEnB,IAqBcC,EArBf,IADJC,MAASC,EACL,EADKA,eAAgBC,EACrB,EADqBA,YAAaC,EAClC,EADkCA,aAAcC,EAChD,EADgDA,aAEpD,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,WACE,gBACEW,MAAM,OACNC,IAAG,yCAAoCJ,GACvCK,IAAKN,OAGT,UAACN,EAAD,YACE,SAACC,EAAD,UAAQK,KACR,UAACJ,EAAD,YACE,wBAQWE,EARII,EAShB,IAAIK,KAAKT,GAAMU,yBARd,uBAAIL,YAKb,ECzBD,IAAMM,EAAOjB,EAAAA,QAAAA,GAAH,2HASGkB,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAf,GACV,OACE,yBACE,SAAC,KAAD,CAAMgB,GAAE,kBAAahB,EAAMiB,IAAMC,MAAO,CAACC,KAAMN,GAA/C,UACE,SAACf,EAAD,CAAWE,MAAOA,OAFbA,EAAMiB,GAMlB,KAGN,C,8ICnBKG,EAAgB3B,EAAAA,QAAAA,GAAH,gMAoCnB,UAxBiB,WACf,OAAkC4B,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEMC,EAAAA,EAAAA,MAFN,OAEPC,EAFO,OAGbJ,EAAaI,EAAKC,SAHL,gDAKbC,QAAQC,IAAR,MALa,yDAAH,qDASdL,GACD,GAAE,KAGD,UAAC,IAAD,YACE,SAACL,EAAD,+BACA,SAAC,IAAD,CAAWR,OAAQU,MAGxB,C,mMCzCDS,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMN,EAAgB,mCAAG,uGACPK,EAAAA,EAAAA,GAAM,wBADC,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBM,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,0FACPJ,EAAAA,EAAAA,GAAM,uBAAD,OAAwBG,EAAxB,iBAAsCC,IADpC,uBACtBR,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,wDAKhBS,EAAe,mCAAG,WAAMC,GAAN,0FACNN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,IADV,uBACrBV,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfW,EAAY,mCAAG,WAAMD,GAAN,0FACHN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,aADF,uBAClBV,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZY,EAAe,mCAAG,WAAMF,GAAN,0FACNN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,aADC,uBACrBV,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","pages/MainPage.jsx","utils/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  width: 280px;\n  padding: 10px;\n  border-radius: 20px;\n  background-color: #efefef;\n\n  transition: transform 100ms ease;\n\n  &:hover, &focus {\n    transform: scale(1.01);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  height: 390px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 10px;\n  height: 100px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h2`\nfont-size: 20px`;\n\nexport const SubInfoWrapper = styled.div`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import {\n  CardWrapper,\n  ImageWrapper,\n  InfoWrapper,\n  Title,\n  SubInfoWrapper,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({\n  movie: { original_title, poster_path, release_date, vote_average },\n}) => {\n  return (\n    <CardWrapper>\n      <ImageWrapper>\n        <img\n          width=\"100%\"\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={original_title}\n        />\n      </ImageWrapper>\n      <InfoWrapper>\n        <Title>{original_title}</Title>\n        <SubInfoWrapper>\n          <p>{formatDate(release_date)}</p>\n          <p>{vote_average}</p>\n        </SubInfoWrapper>\n      </InfoWrapper>\n    </CardWrapper>\n  );\n};\n\nfunction formatDate (date) {\n  return new Date(date).toLocaleDateString();\n}","import { Link, useLocation } from 'react-router-dom';\nimport { MovieCard } from 'components/MovieCard';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  margin: auto;\n\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation()\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{from: location}}>\n              <MovieCard movie={movie} />\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport { MovieList } from 'components/MovieList';\nimport { getTrendingFilms } from 'utils/api-service';\nimport { Container } from 'components/Container';\n\n\nconst MainPageTitle = styled.h1`\n  padding-left: 25px;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n\n  font-size: 24px;\n  line-height: 30px;\n  font-weight: 400;\n\n  border-bottom: 1px solid;\n`;\n\nconst MainPage = () => {\n  const [topMovies, setTopMovies] = useState([]);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      try {\n        const data = await getTrendingFilms();\n        setTopMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getFilms();\n  }, []);\n\n  return (\n    <Container>\n      <MainPageTitle>Top rated films</MainPageTitle>\n      <MovieList movies={topMovies} />\n    </Container>\n  );\n};\n\nexport default MainPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '76059bb2c5370f2088a30ab49f5c2ae0',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios(`/trending/movie/week`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query, page) => {\n  const { data } = await axios(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`);\n  return data;\n};\n"],"names":["CardWrapper","styled","ImageWrapper","InfoWrapper","Title","SubInfoWrapper","MovieCard","date","movie","original_title","poster_path","release_date","vote_average","width","src","alt","Date","toLocaleDateString","List","MovieList","movies","location","useLocation","map","to","id","state","from","MainPageTitle","useState","topMovies","setTopMovies","useEffect","getFilms","getTrendingFilms","data","results","console","log","axios","api_key","getMovieBySearch","query","page","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}