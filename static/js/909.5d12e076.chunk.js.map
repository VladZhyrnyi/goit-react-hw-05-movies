{"version":3,"file":"static/js/909.5d12e076.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Review/Review.styled.js","components/Review/Review.jsx","utils/dateFormatter.js","components/Reviews/Reviews.jsx","utils/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  \n  height: 36px;\n\n  padding: 10px 20px;\n\n\n  font-size: 16px;\n\n  border: 1px solid #000;\n  border-radius: 4px;\n\n  background-color: transparent;\n\n  &:focus,\n  &:hover {\n    background-color: #efefef;\n  }\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = ({ type='button', onClick, children }) => {\n  return (\n    <StyledButton type={type} onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n","const { default: styled } = require('styled-components');\n\nexport const ReviewWrapper = styled.div`\npadding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border-bottom: 1px solid #2e2e2e;\n`;\n\nexport const UserName = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Date = styled.p`\n  font-size: 14px;\n`;\n\nexport const Content = styled.p``;\n","import { dateFormatter } from 'utils/dateFormatter';\n\nimport { ReviewWrapper, UserName, Date } from './Review.styled';\n\n\n\nexport const Review = ({ review: { author, created_at, content } }) => {\n  return (\n    <ReviewWrapper>\n      <UserName>{author}</UserName>\n      <Date>{dateFormatter(created_at)}</Date>\n      <p>{content}</p>\n    </ReviewWrapper>\n  );\n};\n","export const dateFormatter = (date) => {\n  return new Date(date).toUTCString();\n}","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'utils/api-service';\n\nimport { Loader } from 'components/Loader';\nimport { toast } from 'react-hot-toast';\nimport { Review } from 'components/Review/Review';\nimport { Button } from 'components/Button';\nimport styled from 'styled-components';\n\nconst ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst ReviewItem = styled.li`\n  &:nth-child(2n) {\n    background-color: #efefef;\n  }\n`;\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setIsLoading(true);\n\n        const { results, total_results } = await getMovieReviews(movieId, page);\n\n        if (results.length === 0) {\n          toast.error(\"Can't find anything\");\n          return;\n        }\n\n        setReviews(reviews => [...reviews, ...results]);\n        setTotal(total_results);\n      } catch (error) {\n        toast.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId, page]);\n\n  return (\n    <>\n      <ReviewList>\n        {reviews?.map(review => (\n          <ReviewItem key={review.id}>\n            <Review review={review} />\n          </ReviewItem>\n        ))}\n      </ReviewList>\n      <Loader isLoading={isLoading} />\n\n      {total > reviews.length && (\n        <Button onClick={() => setPage(page => page + 1)}>Load more</Button>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '76059bb2c5370f2088a30ab49f5c2ae0',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios(`/trending/movie/week`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query, page) => {\n  const { data } = await axios(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`);\n  return data;\n};\n"],"names":["StyledButton","styled","Button","type","onClick","children","require","default","ReviewWrapper","div","UserName","h3","Date","p","Review","date","review","author","created_at","content","toUTCString","ReviewList","ReviewItem","movieId","useParams","useState","reviews","setReviews","page","setPage","total","setTotal","isLoading","setIsLoading","useEffect","getReviews","getMovieReviews","results","total_results","length","toast","map","id","Loader","axios","api_key","getTrendingFilms","data","getMovieBySearch","query","getMovieDetails","getMovieCast"],"sourceRoot":""}