{"version":3,"file":"static/js/422.4ad26921.chunk.js","mappings":"uSAGMA,EAAcC,EAAAA,QAAAA,IAAH,yCAGXC,EAAeD,EAAAA,QAAAA,IAAH,yHASZE,EAAQF,EAAAA,QAAAA,IAAH,sBAELG,EAAcH,EAAAA,QAAAA,IAAH,0IAQXI,EAAOJ,EAAAA,QAAAA,GAAH,6CAIJK,EAAYL,EAAAA,QAAAA,EAAH,iEAMFM,EAAY,SAAC,GAAkD,IAAD,IAA/CC,MAASC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UACvD,OACE,UAACX,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CACES,IACEH,EAAY,yCAC0BA,G,i6WAGxCI,IAAKH,OAGT,UAACN,EAAD,YACE,SAACC,EAAD,UAAOK,KACP,SAACJ,EAAD,UAAYK,SAInB,EC/CKG,EAAcb,EAAAA,QAAAA,IAAH,+EAoCjB,EA9Ba,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEWC,EAAAA,EAAAA,IAAaJ,GAFxB,gBAEJK,EAFI,EAEJA,KAERN,EAAUM,EAAKC,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,QAAUD,EAAKC,OAApC,KAJR,gDAMZC,QAAQC,IAAR,MANY,yDAAH,qDAUbR,GACD,GAAE,CAACH,KAGF,SAACJ,EAAD,iBACGE,QADH,IACGA,OADH,EACGA,EAAQc,KAAI,SAAAtB,GAAK,OAChB,yBACE,SAACD,EAAD,CAAWC,MAAOA,KADXA,EAAMuB,GADC,KAOvB,C,mMCvCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,uGACPF,EAAAA,EAAAA,GAAM,wBADC,uBACtBG,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,0FACPN,EAAAA,EAAAA,GAAM,uBAAD,OAAwBK,EAAxB,iBAAsCC,IADpC,uBACtBH,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,wDAKhBI,EAAe,mCAAG,WAAMrB,GAAN,0FACNc,EAAAA,EAAAA,GAAM,UAAD,OAAWd,IADV,uBACrBiB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfb,EAAY,mCAAG,WAAMJ,GAAN,0FACHc,EAAAA,EAAAA,GAAM,UAAD,OAAWd,EAAX,aADF,uBAClBiB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMtB,GAAN,0FACNc,EAAAA,EAAAA,GAAM,UAAD,OAAWd,EAAX,aADC,uBACrBiB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/ActorCard/ActorCard.jsx","components/Cast/Cast.jsx","utils/api-service.js"],"sourcesContent":["import defaultAvatar from 'images/actorAvatar.png';\nimport styled from 'styled-components';\n\nconst CardWrapper = styled.div`\n  width: 140px;\n`;\nconst ImageWrapper = styled.div`\n  width: 100%;\n  height: 210px;\n\n  object-position: 50% 50%;\n\n  background-color: #cfcfcf;\n`;\n\nconst Image = styled.img``;\n\nconst InfoWrapper = styled.div`\nheight: 76px;\n  padding: 8px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Name = styled.h3`\n  font-weight: 500;\n`;\n\nconst Character = styled.p`\n  font-size: 14px;\n\n  color: #2e2e2e;\n`;\n\nexport const ActorCard = ({ actor: { profile_path, name, character } }) => {\n  return (\n    <CardWrapper>\n      <ImageWrapper>\n        <Image\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w200${profile_path}`\n              : defaultAvatar\n          }\n          alt={name}\n        />\n      </ImageWrapper>\n      <InfoWrapper>\n        <Name>{name}</Name>\n        <Character>{character}</Character>\n      </InfoWrapper>\n    </CardWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'utils/api-service';\n\nimport styled from 'styled-components';\nimport { ActorCard } from 'components/ActorCard';\n\nconst CastWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  overflow-x: scroll;\n`;\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n\n        setActors(cast.sort((prev, next) => prev.cast_id - next.cast_id));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <CastWrapper>\n      {actors?.map(actor => (\n        <li key={actor.id}>\n          <ActorCard actor={actor} />\n        </li>\n      ))}\n    </CastWrapper>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '76059bb2c5370f2088a30ab49f5c2ae0',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios(`/trending/movie/week`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query, page) => {\n  const { data } = await axios(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`);\n  return data;\n};\n"],"names":["CardWrapper","styled","ImageWrapper","Image","InfoWrapper","Name","Character","ActorCard","actor","profile_path","name","character","src","alt","CastWrapper","useState","actors","setActors","movieId","useParams","useEffect","getCast","getMovieCast","cast","sort","prev","next","cast_id","console","log","map","id","axios","api_key","getTrendingFilms","data","getMovieBySearch","query","page","getMovieDetails","getMovieReviews"],"sourceRoot":""}